{
    "openapi": "3.0.0",
    "info": {
        "title": "Giphy API",
        "description": "API for searching Giphy GIFs, ratings, and comments",
        "contact": {
            "email": "support@example.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local development server"
        }
    ],
    "paths": {
        "/api/comments": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get comments for a GIF",
                "description": "Retrieve all comments for a specific GIF",
                "operationId": "2e2597016871fa5dd2bdfccf912edc41",
                "parameters": [
                    {
                        "name": "gif_id",
                        "in": "query",
                        "description": "GIF identifier to get comments for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Comment"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing gif_id parameter"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Comments"
                ],
                "summary": "Create a new comment",
                "description": "Create a new comment for a GIF",
                "operationId": "c6ce2c222c8502aadd6a287105e49307",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "gif_id",
                                    "comment"
                                ],
                                "properties": {
                                    "gif_id": {
                                        "description": "GIF identifier",
                                        "type": "string"
                                    },
                                    "comment": {
                                        "description": "Comment text",
                                        "type": "string",
                                        "minLength": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/comments/{comment}": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get a specific comment",
                "description": "Retrieve a specific comment by ID",
                "operationId": "884e61ac3f4a0c4eb6d52f68929b4fc9",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "description": "Comment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Comments"
                ],
                "summary": "Update a comment",
                "description": "Update an existing comment",
                "operationId": "2b73d856972689aa0e0d9223d46011ee",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "description": "Comment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "comment"
                                ],
                                "properties": {
                                    "comment": {
                                        "description": "Updated comment text",
                                        "type": "string",
                                        "minLength": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Comment not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Comments"
                ],
                "summary": "Delete a comment",
                "description": "Delete a specific comment",
                "operationId": "3d590dba6524ead27a250d196bc2729b",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "description": "Comment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Comment deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/gifs/save": {
            "post": {
                "tags": [
                    "GIFs"
                ],
                "summary": "Save a GIF to user's collection",
                "description": "Save a GIF from Giphy API response",
                "operationId": "5a6491135976c271108cd9829e4ef771",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "giphy_id",
                                    "giphy_data"
                                ],
                                "properties": {
                                    "giphy_id": {
                                        "description": "Giphy's unique identifier",
                                        "type": "string"
                                    },
                                    "giphy_data": {
                                        "description": "Complete Giphy API response object",
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "GIF saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "GIF saved successfully"
                                        },
                                        "gif": {
                                            "$ref": "#/components/schemas/Gif"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "GIF already saved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "GIF already saved"
                                        },
                                        "gif": {
                                            "$ref": "#/components/schemas/Gif"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/gifs/my": {
            "get": {
                "tags": [
                    "GIFs"
                ],
                "summary": "Get user's saved GIFs",
                "description": "Get user's saved GIFs",
                "operationId": "91f60d3657376fee6b06cf791896c166",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "Filter by content rating",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "g",
                                "pg",
                                "pg-13",
                                "r"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's saved GIFs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Gif"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/gifs/{id}": {
            "get": {
                "tags": [
                    "GIFs"
                ],
                "summary": "Get a specific saved GIF",
                "description": "Get a specific saved GIF",
                "operationId": "18b642a3d315318a23bfffe8a35aa8a7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "GIF ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GIF details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gif"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "GIF not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "GIFs"
                ],
                "summary": "Delete a saved GIF",
                "description": "Delete a saved GIF",
                "operationId": "3c57f8b79cb0976035667d7e4e8db9db",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "GIF ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GIF deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "GIF removed from your collection"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "GIF not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/gifs/check/{giphy_id}": {
            "get": {
                "tags": [
                    "GIFs"
                ],
                "summary": "Check if a GIF is saved by the user",
                "description": "Check if a GIF is saved by the user",
                "operationId": "9c9ee113a92b5af8034201c82632b500",
                "parameters": [
                    {
                        "name": "giphy_id",
                        "in": "path",
                        "description": "Giphy's unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "saved": {
                                            "type": "boolean"
                                        },
                                        "gif": {
                                            "oneOf": [
                                                {
                                                    "$ref": "#/components/schemas/Gif"
                                                }
                                            ],
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/gifs/stats": {
            "get": {
                "tags": [
                    "GIFs"
                ],
                "summary": "Get statistics about user's saved GIFs",
                "description": "Get statistics about user's saved GIFs",
                "operationId": "d41370ca05809fe3c14daceb02fe1774",
                "responses": {
                    "200": {
                        "description": "GIF statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_saved": {
                                            "type": "integer"
                                        },
                                        "by_rating": {
                                            "type": "object"
                                        },
                                        "with_verified_authors": {
                                            "type": "integer"
                                        },
                                        "total_size": {
                                            "type": "string"
                                        },
                                        "average_size": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/gifs/search": {
            "get": {
                "tags": [
                    "Giphy"
                ],
                "summary": "Search Giphy GIFs",
                "description": "Search for GIFs on Giphy using a query string",
                "operationId": "ad65cc14b412f6f7a502119066f25a46",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query for GIFs",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/ratings": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Get user's ratings",
                "description": "Retrieve all ratings for the authenticated user",
                "operationId": "b24d88aeea102065c5a101d3d1ff06d5",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rating"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Create or update a rating",
                "description": "Create a new rating or update existing one for a GIF",
                "operationId": "5cd8244a0d463d65c3d4aff9bb590d0f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "gif_id",
                                    "rating"
                                ],
                                "properties": {
                                    "gif_id": {
                                        "description": "GIF identifier",
                                        "type": "string"
                                    },
                                    "rating": {
                                        "description": "Rating value (1-5)",
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Rating created/updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rating"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/ratings/{rating}": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Get a specific rating",
                "description": "Retrieve a specific rating by ID",
                "operationId": "909ceea0355934ae7669558bb9f5cd2c",
                "parameters": [
                    {
                        "name": "rating",
                        "in": "path",
                        "description": "Rating ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rating"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Rating not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Update a rating",
                "description": "Update an existing rating",
                "operationId": "d8dd19f03c86e0dcd3dc075d5a414011",
                "parameters": [
                    {
                        "name": "rating",
                        "in": "path",
                        "description": "Rating ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rating"
                                ],
                                "properties": {
                                    "rating": {
                                        "description": "Rating value (1-5)",
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rating updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rating"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Rating not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Delete a rating",
                "description": "Delete a specific rating",
                "operationId": "852a27b472544609f65411bfcf953743",
                "parameters": [
                    {
                        "name": "rating",
                        "in": "path",
                        "description": "Rating ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Rating deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Rating not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Handle an incoming authentication request.",
                "operationId": "bc76a9d52929cab7a147ca7b5c527430",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123..."
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Destroy an authenticated session.",
                "operationId": "0ab4e3cf7bc4f7ec81b48f7928c7de7c",
                "responses": {
                    "200": {
                        "description": "Logout successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Create a new user account and automatically log them in",
                "operationId": "18235ea6963e661c49bf381065779d6a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "User's full name",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    },
                                    "password": {
                                        "description": "Password (minimum 8 characters)",
                                        "type": "string",
                                        "minLength": 8
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123..."
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Comment": {
                "title": "Comment",
                "description": "A user's comment on a GIF",
                "properties": {
                    "id": {
                        "description": "Comment ID",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "gif_id": {
                        "description": "GIF identifier",
                        "type": "string"
                    },
                    "comment": {
                        "description": "Comment text",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "Gif": {
                "title": "Gif",
                "description": "A GIF retrieved from the Giphy API",
                "properties": {
                    "id": {
                        "description": "Database ID",
                        "type": "integer"
                    },
                    "giphy_id": {
                        "description": "Giphy's unique identifier",
                        "type": "string"
                    },
                    "created_by": {
                        "description": "User ID who saved this GIF",
                        "type": "integer"
                    },
                    "title": {
                        "description": "GIF title",
                        "type": "string"
                    },
                    "slug": {
                        "description": "GIF slug",
                        "type": "string"
                    },
                    "type": {
                        "description": "Content type (gif, sticker, etc.)",
                        "type": "string"
                    },
                    "rating": {
                        "description": "Content rating (g, pg, pg-13, r)",
                        "type": "string"
                    },
                    "url": {
                        "description": "Giphy page URL",
                        "type": "string"
                    },
                    "bitly_url": {
                        "description": "Bitly shortened URL",
                        "type": "string"
                    },
                    "embed_url": {
                        "description": "Embed URL for the GIF",
                        "type": "string"
                    },
                    "original_width": {
                        "description": "Original image width",
                        "type": "integer"
                    },
                    "original_height": {
                        "description": "Original image height",
                        "type": "integer"
                    },
                    "original_size": {
                        "description": "Original file size in bytes",
                        "type": "integer"
                    },
                    "original_url": {
                        "description": "Original GIF URL",
                        "type": "string"
                    },
                    "original_webp": {
                        "description": "Original WebP URL",
                        "type": "string"
                    },
                    "original_frames": {
                        "description": "Number of frames in original",
                        "type": "integer"
                    },
                    "original_hash": {
                        "description": "Original image hash",
                        "type": "string"
                    },
                    "downsized_url": {
                        "description": "Downsized GIF URL for thumbnails",
                        "type": "string"
                    },
                    "downsized_width": {
                        "description": "Downsized image width",
                        "type": "integer"
                    },
                    "downsized_height": {
                        "description": "Downsized image height",
                        "type": "integer"
                    },
                    "downsized_size": {
                        "description": "Downsized file size",
                        "type": "integer"
                    },
                    "still_480w_url": {
                        "description": "480w still image URL",
                        "type": "string"
                    },
                    "source_post_url": {
                        "description": "Source post URL",
                        "type": "string"
                    },
                    "source_tld": {
                        "description": "Source top-level domain",
                        "type": "string"
                    },
                    "author_username": {
                        "description": "Author's username",
                        "type": "string"
                    },
                    "author_avatar_url": {
                        "description": "Author's avatar URL",
                        "type": "string"
                    },
                    "author_profile_url": {
                        "description": "Author's profile URL",
                        "type": "string"
                    },
                    "author_display_name": {
                        "description": "Author's display name",
                        "type": "string"
                    },
                    "author_is_verified": {
                        "description": "Whether author is verified",
                        "type": "boolean"
                    },
                    "import_datetime": {
                        "description": "Import date from Giphy",
                        "type": "string",
                        "format": "date-time"
                    },
                    "trending_datetime": {
                        "description": "Trending date from Giphy",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "description": "Record creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Record update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Rating": {
                "title": "Rating",
                "description": "A user's rating for a GIF",
                "properties": {
                    "id": {
                        "description": "Rating ID",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "gif_id": {
                        "description": "GIF identifier",
                        "type": "string"
                    },
                    "rating": {
                        "description": "Rating value (1-5)",
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User account information",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "User's full name",
                        "type": "string"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email"
                    },
                    "email_verified_at": {
                        "description": "Email verification timestamp",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Account creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Comments",
            "description": "GIF comment management endpoints"
        },
        {
            "name": "GIFs",
            "description": "API Endpoints for managing saved GIFs"
        },
        {
            "name": "Giphy",
            "description": "Giphy GIF search and management endpoints"
        },
        {
            "name": "Ratings",
            "description": "GIF rating management endpoints"
        },
        {
            "name": "Authentication",
            "description": "User authentication endpoints"
        }
    ]
}